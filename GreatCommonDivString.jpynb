class Solution:
    def gcdOfStrings(self, str1: str, str2: str) -> str:
        base1=len(str1)
        base2=len(str2)

        def valid(k):
            if base1 % k or base2 % k:
                return False
            n1, n2 = base1 // k, base2 // k
            base=str1[:k]
            return str1==n1 * base and str2 ==n2 * base

        for i in range(min(base1, base2), 0 , -1):
            if valid(i):
                return str1[:i]
        return "" 

"""
For the question:

For two strings s and t, we say "t divides s" if and only if s = t + t + t + ... + t + t (i.e., t is concatenated with itself one or more times).

Given two strings str1 and str2, return the largest string x such that x divides both str1 and str2.


"""


# note to self always check if the return null is via " " or "" :///
